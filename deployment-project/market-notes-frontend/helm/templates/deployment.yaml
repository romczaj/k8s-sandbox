apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appFullName }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.appFullName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appFullName }}
      annotations:
        timestamp: {{ now | quote }}
    spec:
      containers:
        - name: {{ .Values.appFullName }}
          image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
          ports:
            - name: app-port
              containerPort: {{ .Values.service.port }}
          envFrom:
            - configMapRef:
                name: {{ .Values.appFullName }}
          volumeMounts:
            - name: config-volume
              mountPath: /usr/share/nginx/html/assets/config
              readOnly: true
          livenessProbe:
            httpGet:
              path: /home
              port: 80
            failureThreshold: 10
            periodSeconds: 10
            initialDelaySeconds: 20
          readinessProbe:
            httpGet:
              path: /home
              port: 80
            failureThreshold: 10
            periodSeconds: 20
            initialDelaySeconds: 20
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.appFullName }}
            items:
              - key: application-properties.json
                path: application-properties.json